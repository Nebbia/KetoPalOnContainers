trigger:
  branches:
    include:
    - master
  paths:
    include:
      - src/BuildingBlocks/*
      - src/Services/Identity/*
      - k8s/charts/ketopal-identity/*
pr: none

resources:
- repo: self

variables:
  # ========================================================================
  #                          Mandatory variables 
  # ========================================================================
  Azure.ServiceConnectionId: 'NebbiaPartner'
  AKS.ServiceConnectionId: 'prod-prod-nebbia-aks-ketopal-1560279773186'
  ACR.ContainerRegistryServiceConnnection: 'NebbiaRegistry'
  ACR.Name: nebbiaregistry
  Chart.Name: ketopal-identity
  Service.Name: identity
  Image.Name: ketopal/identity
  Service.Dockerfile: src/Services/Identity/KetoPal.Identity/Dockerfile
  # ========================================================================
  #                           Optional variables 
  # ========================================================================
  ACR.RepositoryName: '$(ACR.Name)'
  ACR.FullName: '$(ACR.Name).azurecr.io'
  ACR.ImageFullName: '$(ACR.FullName)/$(Image.Name)'
  System.Debug: 'false'

stages:
- stage: Build
  displayName: Build and Publish Stage
  jobs:  
  - job: Build
    displayName: Build and Publish
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: Build and Push
      inputs:
        command: buildAndPush
        containerRegistry: $(ACR.ContainerRegistryServiceConnnection)
        repository: ketopal/$(Service.Name)
        buildContext: .
        Dockerfile: $(Service.Dockerfile)
        tags: $(Build.BuildNumber)

    - task: HelmInstaller@1
      displayName: Helm installer
      inputs: 
        helmVersionToInstall: latest

    - task: HelmDeploy@0
      displayName: 'Init Helm Client'
      inputs:
        connectionType: None
        command: init
        arguments: '--client-only'

    - task: HelmDeploy@0
      displayName: 'Package Helm Charts'
      inputs:
        connectionType: None
        command: package
        chartPath: 'k8s/charts/$(Chart.Name)'
        chartVersion: '$(Build.BuildId)'
        destination: $(Build.ArtifactStagingDirectory)
        updateDependency: true

    - task: AzureCLI@1
      displayName: 'Push helm chart'
      inputs:
        azureSubscription: $(Azure.ServiceConnectionId)
        scriptLocation: inlineScript
        inlineScript: 'az acr helm push -n $(ACR.RepositoryName) $(Build.ArtifactStagingDirectory)/$(Chart.Name)-$(Build.BuildId).tgz'
        conditions: and(succeeded(), eq(variables['Build.SourceBranch'],'refs/heads/master'))
        
    - task: CopyFiles@2
      displayName: "Copy Helm Charts"
      inputs: 
        SourceFolder: './k8s/charts'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactsStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: "Publish Build Artifacts"
      inputs: 
        ArtifactName: 'helm'
        PathtoPublish: '$(Build.ArtifactsStagingDirectory)'

- stage: Production
  jobs:
  - template: ../jobs/regionDeploy.yml
    variables: 
    - group: eastus_vars
    parameters:
      azureSubscription: $(Azure.ServiceConnectionId)
      aksConnection: $(AKS.ServiceConnectionId)
      acrName: $(ACR.RepositoryName)
      chartName: $(Chart.Name)
      deployment: 'deployEastUS'
      deploymentDisplayName: 'Deploy Identity East US'
      releaseName: identity.api
      pool: 'ubuntu-16.04'
      env: prod.ketopal
      namespace: ketopal
      helmOverrideValues: 'image.repository=$(ACR.ImageFullName),image.tag=$(Build.BuildNumber),buildID=$(Build.BuildId)'
      