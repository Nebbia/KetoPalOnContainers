# Default values for ketopalapi.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
fullnameOverride: ketopal-api
replicaCount: 2
image:
  repository: ketopal/api
  tag: stable
  pullPolicy: IfNotPresent
imagePullSecrets: []
  # Optionally specify an array of imagePullSecrets.
  # Secrets must be manually created in the namespace.
  # ref: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
  #
  # This uses credentials from secret "myRegistryKeySecretName".
  # - name: myRegistryKeySecretName
service:
  type: ClusterIP
  port: 80

buildID: null

probes:
  enabled: false

ingress:
  enabled: true
  annotations:
    kubernetes.io/tls-acme: "true"
    kubernetes.io/ingress.class: nginx
    certmanager.k8s.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rewrite-target: /$1
  path: /
  hosts:
    - keto-pal-api.eastus.cloudapp.azure.com
    - keto-api.nebbiatech.com
  tls: 
    - secretName: ketopal-api-tls
      hosts:
        - keto-pal-api.eastus.cloudapp.azure.com
        - keto-api.nebbiatech.com
secrets: 
  connectionStrings:
    foodDb: "[to be filled in at runtime during deployment]"
  # Optionally specify a set of secret objects whose values
  # will be injected as environment variables by default.
  # You should add this section to a file like secrets.yaml
  # that is explicitly NOT committed to source code control
  # and then include it as part of your helm install step.
  # ref: https://kubernetes.io/docs/concepts/configuration/secret/
  #
  # This creates a secret "mysecret" and injects "mypassword"
  # as the environment variable mysecret_mypassword=password.
  # mysecret:
  #   mypassword: password
resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #  cpu: 100m
  #  memory: 128Mi
  # requests:
  #  cpu: 100m
  #  memory: 128Mi
nodeSelector: {}

tolerations: []

affinity: {}